buildscript {

    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }

    dependencies {
        classpath 'com.commercehub.gradle.plugin:gradle-avro-plugin:0.9.1'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.6'
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'application'
    id 'com.google.protobuf' version '0.8.6'
    id 'org.jetbrains.kotlin.jvm' version '1.2.50'
    id 'com.commercehub.gradle.plugin.avro-base' version '0.9.1'
}

idea {
    module {
        sourceDirs += file("${projectDir}/build/generated/source/proto/main/grpc")
        sourceDirs += file("${projectDir}/build/generated/source/proto/main/java")
        sourceDirs += file("${projectDir}/build/generated/source/avro/main/java")
        sourceDirs += file("${projectDir}/src/main/avro")
    }
}

sourceSets {
    main {
        kotlin {
            srcDirs += file("${projectDir}/build/generated/source/proto/main/grpc")
            srcDirs += file("${projectDir}/build/generated/source/proto/main/java")
            srcDirs += file("${projectDir}/build/generated/source/avro/main/java")
        }
    }
}

ext {
    grpcVersion = '1.5.0'
    avroVersion = '1.8.2'
}


group 'ep.dsid'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    compile "com.google.api.grpc:proto-google-common-protos:0.1.9"
    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"

    compile (group: 'org.apache.avro', name: 'avro', version: avroVersion)

    compile 'org.slf4j:slf4j-simple:1.7.21'

    compile (group: 'org.apache.avro', name: 'avro-ipc', version: avroVersion) {
        exclude group: 'org.slf4j'
    }

}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.3.0'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                // To generate deprecated interfaces and static bindService method,
                // turn the enable_deprecated option to true below:
                option 'enable_deprecated=false'
            }
        }
    }
}

startScripts.enabled = false

task generateAvroProtocol(type: com.commercehub.gradle.plugin.avro.GenerateAvroProtocolTask) {
    source += ("${projectDir}/src/main/avro")
    outputDir = file("${projectDir}/build/generated/source/avro/main/avpr")
}

task generateAvroJava(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
    dependsOn(generateAvroProtocol)

    source += file("${projectDir}/build/generated/source/avro/main/avpr")
    outputDir = file("${projectDir}/build/generated/source/avro/main/java")
}

compileJava.source(generateAvroJava.outputs)


task buildClient(type: CreateStartScripts) {
    dependsOn(generateAvroJava)

    mainClassName = 'dsid.assignment.client.ApplicationStarterKt'
    applicationName = 'client'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}

task buildServer(type: CreateStartScripts) {
    dependsOn(generateAvroJava)

    mainClassName = 'dsid.assignment.server.ServerKt'
    applicationName = 'server'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}

applicationDistribution.into('bin') {
    from(buildClient)
    from(buildServer)
    fileMode = 0755
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}